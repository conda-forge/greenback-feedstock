{% set name = "greenback" %}
{% set version = "1.2.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: db8b323617e1e1a7cbb3615fb9048c44b483aab3d3415f49e07c6957c5fce60d

build:
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  host:
    - python >=3.8
    - pip
  run:
    - python >=3.8
    - greenlet !=0.4.17
    - sniffio
    - outcome

test:
  imports:
    - greenback

about:
  home: https://github.com/oremanj/greenback
  summary: 'Reenter an asyncio or Trio event loop from synchronous code'
  description: |
    greenback is a small library that allows you to call back into async code
    from a syntactically synchronous function, as long as the synchronous function
    was originally called from an async task (running in an asyncio or Trio event loop)
    that set up a greenback "portal".
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE
    - LICENSE.MIT
  # The doc_url and dev_url are optional.
  doc_url: https://greenback.readthedocs.io/
  dev_url: https://github.com/oremanj/greenback

extra:
  recipe-maintainers:
    - peterbygrave
